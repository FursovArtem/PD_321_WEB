@page "/movies"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using BlazorMovieApp.Models
@using BlazorMovieApp.Data
@implements IAsyncDisposable
@inject IDbContextFactory<BlazorMovieApp.Data.BlazorMovieAppContext> DbFactory
@rendermode InteractiveServer

<PageTitle>Index</PageTitle>

<h1>Index</h1>

<p>
	<a href="movies/create">Create New</a>
</p>
<div>
	<select @onchange="(ChangeEventArgs e) => state.ItemsPerPage = Convert.ToInt32(e.Value)">
		<option value="1">1</option>
		<option value="2">2</option>
		<option value="3">3</option>
	</select>
</div>
<QuickGrid Class="table" Items="FilteredMovies" Pagination="state">
	<PropertyColumn Property="movie => movie.Title" Sortable="true">
		<ColumnOptions>
			<div>
				<input type="search" @bind="titleFilter" @bind:event="oninput" autofocus />
			</div>
		</ColumnOptions>
	</PropertyColumn>
	<PropertyColumn Property="movie => movie.ReleaseDate" Title="Rease date" Format="yyyy.MM.dd" Sortable="true" />
	<PropertyColumn Property="movie => movie.Genre" Sortable="true" />
	<PropertyColumn Property="movie => movie.Price" Sortable="true" />

	<TemplateColumn Context="movie">
		<a href="@($"movies/edit?id={movie.Id}")">Edit</a> |
		<a href="@($"movies/details?id={movie.Id}")">Details</a> |
		<a href="@($"movies/delete?id={movie.Id}")">Delete</a>
	</TemplateColumn>
</QuickGrid>

<Paginator State="state" />

@code {
	PaginationState state = new PaginationState { ItemsPerPage = 2 };
	string titleFilter = "";
	IQueryable<Movie> FilteredMovies => context.Movie.Where(m => m.Title.Contains(titleFilter));

	private BlazorMovieAppContext context = default!;

	protected override void OnInitialized()
	{
		context = DbFactory.CreateDbContext();
	}

	public async ValueTask DisposeAsync() => await context.DisposeAsync();

	// public void ChangeItemsPerPage(ChangeEventArgs e)
	// {
	// 	// state.ItemsPerPage = Convert.ToInt32(e.ToString());
	// 	state.ItemsPerPage = Convert.ToInt32(e.Value);
	// }
}
